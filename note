#!/bin/bash

NFILE="${HOME}/.notes"

alert ()
{
    echo -ne "\e[34;1m->\e[0m ${1}"
}

error ()
{
    echo -ne "\n\e[31;1mERROR:\e[0m ${1}"
    exit
}

new_note ()
{
    local TITLE=""
    local TEXT=""
    alert "Title: "
    read TITLE
    alert "Text: "
    while read i; do
        if [[ -z ${TEXT} ]]; then
            TEXT="${i}"
        else
            TEXT+="\n${i}"
        fi
    done
    new_note_cmd "${TITLE}" "${TEXT}"
}

new_note_cmd ()
{
    local TITLE="${1}"
    local TEXT="${2}"
    local DATE=$(date +'%d/%m/%Y %H:%M:%S')

    if [[ -z "${TITLE}" ]]; then
        TITLE="Untitled"
    fi

    if [[ -z "${TEXT}" ]]; then
        error "You gay, insert the body of note -.-\n"
    fi

    TEXT=$(echo -ne "${TEXT}" | tr "\n" "\1")
    echo -e "${DATE}\0${TITLE}\0${TEXT}" | sed -r 's/\s+$//g' >> "${NFILE}"
    alert "Note correctly inserted :D\n"
}

list_notes ()
{
    alert "Notes:\n"
    if [[ "0" = $(wc -l "${NFILE}" | awk '{print $1}') ]]; then
        echo "No notes"
    fi
    cat "${NFILE}" | awk -F"\x0" '{print "\t", NR, "\t", $2}'
}

show_note ()
{
    local num
    alert "Note number: "
    read num
    show_note_cmd "${num}"
}

show_note_cmd ()
{
    local num="${1}"

    if [[ ! -z "$(echo "${num}" | sed 's/[0-9]//g')" ]]; then
        error "You fag, insert a number, idiot\n"
    fi

    if [[ ${num} -gt $(wc -l "${NFILE}" | awk '{print $1}') ]]; then
        error "You really asshole, this note doesn't exists >.>\n"
    fi

    alert "Data: "
    cat "${NFILE}" | awk -F"\x0" "(NR == ${num}) { print \$1 }"
    alert "Title: "
    cat "${NFILE}" | awk -F"\x0" "(NR == ${num}) { print \$2 }"
    alert "Text: "
    cat "${NFILE}" | awk -F"\x0" "(NR == ${num}) { print \$3 }" | tr "\1" "\n"
}

delete_note ()
{
    local num
    alert "Note[s] number: "
    read num
    num=$(echo "${num}" | sed -r 's/\s/ /g')
    eval "delete_note_cmd ${num}"
}

delete_note_cmd ()
{
    local n
    local j
    local d=0
    local POSTS=""
    for i in $(seq 1 $#); do
        eval "n=\"\$${i}\""

        if [[ ! -z "$(echo "${n}" | sed 's/[0-9.]//g')" ]]; then
            error "You fag, insert one or more numbers or ranges, idiot\n"
        fi

        if [[ ! -z "$(echo ${n} | sed 's/[0-9]//g')" ]]; then
            for j in `seq $(echo ${n} | sed 's/\.\..*//') $(echo ${n} | sed 's/.*\.\.//')`; do
                POSTS+="${j}\n"
            done
        else
            POSTS+="${n}\n"
        fi
    done

    for i in $(echo -e "${POSTS}" | sort -n); do
        n=$((i - d))

        if [[ ${n} -gt $(wc -l "${NFILE}" | awk '{print $1}') ]]; then
            error "You really asshole, this note doesn't exists >.>\n"
        fi

        local DATE="$(cat "${NFILE}" | awk -F"\x0" "(NR == ${n}) {print \$1}" | sed 's/\//\\\//g')"
        sed -i "s/.*${DATE}.*//g;/^$/d" "${NFILE}"
        let d+=1
    done

    alert "Note[s] deleted successfully\n"
}

show_help ()
{
    echo "USAGE ${0} [-n|-l|-s|-d|-h]"
    echo "  no arguments mean -n"
    echo
    echo "    -n    Insert new note (to stop insert send a EOF char, ^D aka Ctrl + D)"
    echo "    -l    List notes"
    echo "    -s    Show note"
    echo "    -d    Delete note[s]"
    echo "    -h    Show this help"
    echo "NON-INTERACTIVE MODE:"
    echo "    -n <title> <text>             Insert new note"
    echo "    -s <number>                   Show note"
    echo "    -d (<first..last><number>)    Delete note[s]"
}


if [[ "$#" = "0" ]]; then
    new_note
fi

if [[ "$#" = "1" ]]; then
    case "${1}" in
        -n)
            new_note
        ;;
        -l)
            list_notes
        ;;
        -s)
            show_note
        ;;
        -d)
            delete_note
        ;;
        -h)
            show_help
        ;;
        *)
            error "HURR see help DURR\n"
        ;;
    esac
    exit
fi

case "${1}" in
    -n)
        if [[ "$#" != "3" ]]; then
            error "I wonna know why you are so gay\n"
        fi
        new_note_cmd "${2}" "${3}"
    ;;
    -s)
        if [[ "$#" != "2" ]]; then
            error "I wonna know why you are so gay\n"
        fi
        show_note_cmd "${2}"
    ;;
    -d)
        if [[ "$#" -lt "2" ]]; then
            error "I wonna know why you are so gay\n"
        fi
        shift
        delete_note_cmd "$@"
    ;;
esac
